Exploitation

Some common exploits present in programs:
1. Off by one error , also called fence post error where problems arise around the edges,
min or max of a container which holds data. 
for example : if (a > size) instead of (a >= size) or vice-versa. Such problems can cause
avalanche effects on program logic and can be exploited by hackers to make the program do completely different stuff

another example could be unicode representation of characters which use two bytes instead of conventional character representation (1 byte)

* concepts of hacking transcend computing and can be applied in real-life situations as well

Most program exploits deal with memory corruption. these could mean common exploit techniques like buffer overflow or non-common exploits like format string exploits.
The goal is to take control of the program's execution flow by tricking it into running a malicious piece of code.
Usually , such corruptions in memory lead to crash and would cause the entire program logic to halt and exit, but in a carefully controlled environment, it is possible to change the behaviour of the 
program logic and lead to unintended consequences.

C, being high-level programming language, assumes data integrity is taken care of by programmer. if this burden is shifted to the compiler, it would increase compile time due to more checks.
Once a variable is allocated memory, there are no safeguards to ensure the variable is fitted in the allocated space.

Program crashes are annoying and can be hard to solve,but in the hands of hacker, they can be dangerous
hackers can insert maliciious pieces of code into the memory leading to dangerous consequences.
